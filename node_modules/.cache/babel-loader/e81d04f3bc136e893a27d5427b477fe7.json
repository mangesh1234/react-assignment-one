{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mangesh.tembhurne\\\\Desktop\\\\React\\\\react-Assignment-1\\\\src\\\\App.js\";\nvar TodoBox = React.createClass({\n  displayName: \"TodoBox\",\n  getInitialState: function getInitialState() {\n    return {\n      data: [{\n        \"id\": \"00001\",\n        \"task\": \"Wake up\",\n        \"complete\": \"false\"\n      }, {\n        \"id\": \"00002\",\n        \"task\": \"Eat breakfast\",\n        \"complete\": \"false\"\n      }, {\n        \"id\": \"00003\",\n        \"task\": \"Go to work\",\n        \"complete\": \"false\"\n      }]\n    };\n  },\n  generateId: function generateId() {\n    return Math.floor(Math.random() * 90000) + 10000;\n  },\n  handleNodeRemoval: function handleNodeRemoval(nodeId) {\n    var data = this.state.data;\n    data = data.filter(function (el) {\n      return el.id !== nodeId;\n    });\n    this.setState({\n      data: data\n    });\n    return;\n  },\n  handleSubmit: function handleSubmit(task) {\n    var data = this.state.data;\n    var id = this.generateId().toString();\n    var complete = 'false';\n    data = data.concat([{\n      id: id,\n      task: task,\n      complete: complete\n    }]);\n    this.setState({\n      data: data\n    });\n  },\n  handleToggleComplete: function handleToggleComplete(nodeId) {\n    var data = this.state.data;\n\n    for (var i in data) {\n      if (data[i].id == nodeId) {\n        data[i].complete = data[i].complete === 'true' ? 'false' : 'true';\n        break;\n      }\n    }\n\n    this.setState({\n      data: data\n    });\n    return;\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"well\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"vert-offset-top-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"To do:\"), React.createElement(TodoList, {\n      data: this.state.data,\n      removeNode: this.handleNodeRemoval,\n      toggleComplete: this.handleToggleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(TodoForm, {\n      onTaskSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n});\nvar TodoList = React.createClass({\n  displayName: \"TodoList\",\n  removeNode: function removeNode(nodeId) {\n    this.props.removeNode(nodeId);\n    return;\n  },\n  toggleComplete: function toggleComplete(nodeId) {\n    this.props.toggleComplete(nodeId);\n    return;\n  },\n  render: function render() {\n    var listNodes = this.props.data.map(function (listItem) {\n      return React.createElement(TodoItem, {\n        key: listItem.id,\n        nodeId: listItem.id,\n        task: listItem.task,\n        complete: listItem.complete,\n        removeNode: this.removeNode,\n        toggleComplete: this.toggleComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }, this);\n    return React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, listNodes);\n  }\n});\nvar TodoItem = React.createClass({\n  displayName: \"TodoItem\",\n  removeNode: function removeNode(e) {\n    e.preventDefault();\n    this.props.removeNode(this.props.nodeId);\n    return;\n  },\n  toggleComplete: function toggleComplete(e) {\n    e.preventDefault();\n    this.props.toggleComplete(this.props.nodeId);\n    return;\n  },\n  updateClass: function updateClass() {},\n  render: function render() {\n    var classes = 'list-group-item clearfix';\n\n    if (this.props.complete === 'true') {\n      classes = classes + ' list-group-item-success';\n    }\n\n    return React.createElement(\"li\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.task, React.createElement(\"div\", {\n      className: \"pull-right\",\n      role: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-xs btn-success img-circle\",\n      onClick: this.toggleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u2713\"), \" \", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-xs btn-danger img-circle\",\n      onClick: this.removeNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\uFF38\")));\n  }\n});\nvar TodoForm = React.createClass({\n  displayName: \"TodoForm\",\n  doSubmit: function doSubmit(e) {\n    e.preventDefault();\n    var task = React.findDOMNode(this.refs.task).value.trim();\n\n    if (!task) {\n      return;\n    }\n\n    this.props.onTaskSubmit(task);\n    React.findDOMNode(this.refs.task).value = '';\n    return;\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"commentForm vert-offset-top-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"todoForm form-horizontal\",\n      onSubmit: this.doSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"task\",\n      className: \"col-md-2 control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"div\", {\n      className: \"col-md-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"task\",\n      ref: \"task\",\n      className: \"form-control\",\n      placeholder: \"What do you need to do?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-10 col-md-offset-2 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save Item\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))))));\n  }\n});\nReact.render(React.createElement(TodoBox, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}), document.getElementById('todoBox'));","map":{"version":3,"sources":["C:\\Users\\mangesh.tembhurne\\Desktop\\React\\react-Assignment-1\\src\\App.js"],"names":["TodoBox","React","createClass","getInitialState","data","generateId","Math","floor","random","handleNodeRemoval","nodeId","state","filter","el","id","setState","handleSubmit","task","toString","complete","concat","handleToggleComplete","i","render","TodoList","removeNode","props","toggleComplete","listNodes","map","listItem","TodoItem","e","preventDefault","updateClass","classes","TodoForm","doSubmit","findDOMNode","refs","value","trim","onTaskSubmit","document","getElementById"],"mappings":"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","sourcesContent":["var TodoBox = React.createClass({\n\tgetInitialState: function () {\n\t\treturn {\n\t\t\tdata: [\n\t\t\t\t{\"id\":\"00001\",\"task\":\"Wake up\",\"complete\":\"false\"},\n\t\t\t\t{\"id\":\"00002\",\"task\":\"Eat breakfast\",\"complete\":\"false\"},\n        {\"id\":\"00003\",\"task\":\"Go to work\",\"complete\":\"false\"}\n\t\t\t]\n\t\t};\n\t},\n\tgenerateId: function () {\n\t\treturn Math.floor(Math.random()*90000) + 10000;\n\t},\n\thandleNodeRemoval: function (nodeId) {\n\t\tvar data = this.state.data;\n\t\tdata = data.filter(function (el) {\n\t\t\treturn el.id !== nodeId;\n\t\t});\n\t\tthis.setState({data});\n\t\treturn;\n\t},\n\thandleSubmit: function (task) {\n\t\tvar data = this.state.data;\n\t\tvar id = this.generateId().toString();\n\t\tvar complete = 'false';\n\t\tdata = data.concat([{id, task, complete}]);\n\t\tthis.setState({data});\n\t},\n\thandleToggleComplete: function (nodeId) {\n\t\tvar data = this.state.data;\n\t\tfor (var i in data) {\n\t\t\tif (data[i].id == nodeId) {\n\t\t\t\tdata[i].complete = data[i].complete === 'true' ? 'false' : 'true';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.setState({data});\n\t\treturn;\n\t},\n\trender: function() {\n\t\treturn (\n\t\t\t<div className=\"well\">\n\t\t\t\t<h1 className=\"vert-offset-top-0\">To do:</h1>\n\t\t\t\t<TodoList data={this.state.data} removeNode={this.handleNodeRemoval} toggleComplete={this.handleToggleComplete} />\n\t\t\t\t<TodoForm onTaskSubmit={this.handleSubmit} />\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nvar TodoList = React.createClass({\n\tremoveNode: function (nodeId) {\n\t\tthis.props.removeNode(nodeId);\n\t\treturn;\n\t},\n\ttoggleComplete: function (nodeId) {\n\t\tthis.props.toggleComplete(nodeId);\n\t\treturn;\n\t},\n\trender: function() {\n\t\tvar listNodes = this.props.data.map(function (listItem) {\n\t\t\treturn (\n\t\t\t\t<TodoItem key={listItem.id} nodeId={listItem.id} task={listItem.task} complete={listItem.complete} removeNode={this.removeNode} toggleComplete={this.toggleComplete} />\n\t\t\t);\n\t\t},this);\n\t\treturn (\n\t\t\t<ul className=\"list-group\">\n\t\t\t\t{listNodes}\n\t\t\t</ul>\n\t\t);\n\t}\n});\n\nvar TodoItem = React.createClass({\n\tremoveNode: function (e) {\n\t\te.preventDefault();\n\t\tthis.props.removeNode(this.props.nodeId);\n\t\treturn;\n\t},\n\ttoggleComplete: function (e) {\n\t\te.preventDefault();\n\t\tthis.props.toggleComplete(this.props.nodeId);\n\t\treturn;\n\t},\n\tupdateClass: function () {\n\t\t\n\t},\n\trender: function() {\n\t\tvar classes = 'list-group-item clearfix';\n\t\tif (this.props.complete === 'true') {\n\t\t\tclasses = classes + ' list-group-item-success';\n\t\t}\n\t\treturn (\n\t\t\t<li className={classes}>\n\t\t\t\t{this.props.task}\n\t\t\t\t<div className=\"pull-right\" role=\"group\">\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-xs btn-success img-circle\" onClick={this.toggleComplete}>&#x2713;</button> <button type=\"button\" className=\"btn btn-xs btn-danger img-circle\" onClick={this.removeNode}>&#xff38;</button>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n});\n\nvar TodoForm = React.createClass({\n\tdoSubmit: function (e) {\n\t\te.preventDefault();\n\t\tvar task = React.findDOMNode(this.refs.task).value.trim();\n\t\tif (!task) {\n\t\t\treturn;\n\t\t}\n\t\tthis.props.onTaskSubmit(task);\n\t\tReact.findDOMNode(this.refs.task).value = '';\n\t\treturn;\n\t},\n\trender: function() {\n\t\treturn (\n\t\t\t<div className=\"commentForm vert-offset-top-2\">\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"clearfix\">\n\t\t\t\t\t<form className=\"todoForm form-horizontal\" onSubmit={this.doSubmit}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"task\" className=\"col-md-2 control-label\">Task</label>\n\t\t\t\t\t\t\t<div className=\"col-md-10\">\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"task\" ref=\"task\" className=\"form-control\" placeholder=\"What do you need to do?\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-md-10 col-md-offset-2 text-right\">\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Save Item\" className=\"btn btn-primary\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n\nReact.render(\n\t<TodoBox />,\n\tdocument.getElementById('todoBox')\n);"]},"metadata":{},"sourceType":"module"}